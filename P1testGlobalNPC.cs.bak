using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using Terraria;
using Terraria.DataStructures;
using Terraria.GameInput;
using Terraria.ID;
using Terraria.ModLoader;
using Terraria.ModLoader.IO;
using P1test.Dusts;

namespace P1test
{
	public class P1testGlobalNPC : GlobalNPC
	{
		public bool Slagged = false;
		public bool SolBurn = false;
		public bool VoiBurn = false;
		public override bool InstancePerEntity => true;
		public bool GLOOed = false;
		public bool Wasped = false;

		public override void ResetEffects(NPC npc) 
		{
			Slagged = false;
			SolBurn = false;
			VoiBurn = false;
			GLOOed = false;
			Wasped = false;
		}

	


		public override void DrawEffects(NPC npc, ref Color drawColor)
		{
			if (VoiBurn == true)
			{
				if (Main.rand.Next(4) < 3)
				{
					int dust = Dust.NewDust(npc.position - new Vector2(2f, 2f), npc.width + 4, npc.height + 4, ModContent.DustType<VoiFlame>(), npc.velocity.X * 0.4f, npc.velocity.Y * 0.4f, 100, default(Color), 3.5f);
					Main.dust[dust].noGravity = true;
					Main.dust[dust].velocity *= 1.8f;
					Main.dust[dust].velocity.Y -= 0.5f;
					if (Main.rand.NextBool(4))
					{
						Main.dust[dust].noGravity = false;
						Main.dust[dust].scale *= 0.5f;
					}
				}
				Lighting.AddLight(npc.position, 0.1f, 0.2f, 0.7f);
			}
			else if (SolBurn == true)
			{
				if (Main.rand.Next(4) < 3)
				{
					int dust = Dust.NewDust(npc.position - new Vector2(2f, 2f), npc.width + 4, npc.height + 4, ModContent.DustType<SolFlame>(), npc.velocity.X * 0.4f, npc.velocity.Y * 0.4f, 100, default(Color), 3.5f);
					Main.dust[dust].noGravity = true;
					Main.dust[dust].velocity *= 1.8f;
					Main.dust[dust].velocity.Y -= 0.5f;
					if (Main.rand.NextBool(4))
					{
						Main.dust[dust].noGravity = false;
						Main.dust[dust].scale *= 0.5f;
					}
				}
				Lighting.AddLight(npc.position, 0.1f, 0.2f, 0.7f);
			}

			else if (Slagged == true)
			{
				if (Main.rand.Next(4) < 2)//(4)<3
				{
					int dust = Dust.NewDust(npc.position - new Vector2(2f, 2f), npc.width + 4, npc.height + 4, 97, npc.velocity.X * 0.4f, npc.velocity.Y * 0.4f, 100, default(Color), 3.5f);
					Main.dust[dust].noGravity = true;
					Main.dust[dust].velocity *= 1.8f;
					Main.dust[dust].velocity.Y -= 0.5f;
					if (Main.rand.NextBool(4))
					{
						Main.dust[dust].noGravity = false;
						Main.dust[dust].scale *= 0.5f;
					}
				}
				Lighting.AddLight(npc.position, 0.1f, 0.2f, 0.5f);//0.1f, 0.2f, 0.7f
			}
		}
		public override void ModifyHitPlayer(NPC npc, Player target, ref int damage, ref bool crit)
        {
			if (Wasped == true)
			{


				float damage2 = (float)damage * 0.9f;
				damage = (int)damage2;
				crit = false;
			}
		}

		public override bool CheckDead(NPC npc)
        {
			if (Wasped == true)
			{
				int Wasp = 0 + Main.rand.Next(2);
				if (Wasp == 1)
                {

					
					//Just showing off each parameter of NewProjectile function
					float centerX = npc.Center.X; //Spawn at the projectile's last center x when it gets destroyed
					float centerY = npc.Center.Y; //Spawn at the projectile's last center y when it gets destroyed
					float velocityX = 0 + Main.rand.Next(5) - 3; //Doesn't move in the x direction
					float velocityY = 0 + Main.rand.Next(5) - 3; //Doesn't move in the y direction



					int type = mod.ProjectileType("SingWasp"); //just the projectile you'll be firing
					int damage = 75; //no damage
					float knockBack = 0f; //no knockback

					//Many ways of doing owner
					
					
					int centerX2 = (int)centerX; //Spawn at the projectile's last center x when it gets destroyed
					int centerY2 = (int)centerY;

					//Now let's put this all together, first is most simple
					Vector2 projCenter = new Vector2(centerX, centerY);
					Vector2 projVelocity = new Vector2(velocityX, velocityY);
					Projectile.NewProjectile(projCenter, projVelocity, type, damage, knockBack, 0);
				}


			}
			return true;
        }


		public override void UpdateLifeRegen(NPC npc, ref int damage)
		{
			if (GLOOed == true)
			{
				float newVelocity = npc.velocity.X;
				newVelocity = newVelocity * 0.1f;
				npc.velocity.X = newVelocity;
			}

			if (SolBurn == true)
			{
				
				
					if (npc.lifeRegen > 0)
					{
						npc.lifeRegen = 0;
					}
					npc.lifeRegen -= 100;
					if (damage < 5)
					{
						damage = 5;
					}
				
			}

			if (VoiBurn == true)
			{
				
					if (npc.lifeRegen > 0)
					{
						npc.lifeRegen = 0;
					}
					npc.lifeRegen -= 80;
					if (damage < 4)
					{
						damage = 4;
					}
				
			}

			if (Wasped == true)
			{

				if (npc.lifeRegen > 0)
				{
					npc.lifeRegen = 0;
				}
				npc.lifeRegen -= 400;
				if (damage < 10)
				{
					damage = 10;
				}

			}

			if (Slagged == true)
			{

				if (npc.lifeRegen > 0)
				{
					npc.lifeRegen = 0;
				}
				npc.lifeRegen -= 80;
				if (damage < 2)
				{
					damage = 2;
				}

			}

		}




	}

	


}
