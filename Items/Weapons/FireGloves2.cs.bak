using System;
using Microsoft.Xna.Framework;
using Terraria;
using Terraria.ID;
using Terraria.ModLoader;

namespace P1test.Items.Weapons
{
	public class FireGloves2 : ModItem
	{
		public int a = 1;
		public override void SetStaticDefaults() {
			Tooltip.SetDefault("Kung-Fu + Fire-Balls");
		}
		
		public override void SetDefaults() {

			item.CloneDefaults(ItemID.Arkhalis);
			item.damage = 200;
			
			//item.melee = true;
			//item.ranged = true;
			item.width = 100;
			item.height = 100;
			item.useTime = 16;
			item.useAnimation = 20;
			//item.useStyle = 5; // how you use the item (swinging, holding out, etc)
			item.knockBack = 10;
			//item.value = 10000;
			//item.rare = ItemRarityID.Green;
			//item.UseSound = SoundID.Item1;
			item.autoReuse = true;






		}

		public override void AddRecipes()
		{
			ModRecipe recipe = new ModRecipe(mod);
			recipe.AddIngredient(ItemID.DirtBlock, 10);
			recipe.AddTile(TileID.WorkBenches);
			recipe.SetResult(this);
			recipe.AddRecipe();
		}

		public override bool AltFunctionUse(Player player) {
			return true;
		}

		public override Vector2? HoldoutOffset()
		{
			return new Vector2(0, 0);
		}
		public override bool CanUseItem(Player player) {
			if (player.altFunctionUse == 2) {
				/*if(player.GetModPlayer<P1testPlayer>().Scarfe = true/* || player.GetModPlayer<P1testPlayer>().Scarf = true)
                {
					item.useTime = 4;
					item.useAnimation = 20;
					item.shoot = 85;
					item.useStyle = 5;
					item.shootSpeed = 4f;
					//item.hidevisual = true;
				}
                else*/
                //{
					item.useStyle = ItemUseStyleID.HoldingOut; // how you use the item (swinging, holding out, etc)
					item.useTime = 35;
					item.useAnimation = 35;
					item.damage = 500;
					item.shoot = 34;
					item.shootSpeed = 4f;
				//}
				
			}
			else {
				item.CloneDefaults(ItemID.Arkhalis);
				//if (a % 5 == 1 || a % 5 == 2|| a % 5 == 3 || a % 5 == 4)
				//{
				//	item.shoot = 595;
				//	item.shootSpeed = 2.5f;
				//}
				//
				//else if (a % 5 == 0)
				//{
				//	item.shoot = 684;
				//	item.shootSpeed = 2.5f;
				//}
				
			}
			return base.CanUseItem(player);
		}


		public override void OnHitNPC(Player player, NPC target, int damage, float knockBack, bool crit) {
			if (player.altFunctionUse == 2) {
				target.AddBuff(BuffID.OnFire, 360);
				target.AddBuff(323, 360);
				target.AddBuff(39, 360);
			}
			else {
				target.AddBuff(BuffID.Ichor, 120);
				player.AddBuff(2, 360);
				player.AddBuff(115, 360);
			}
			//a = a + 1;
		}

		/*public override void MeleeEffects(Player player, Rectangle hitbox) {
			if (Main.rand.NextBool(3)) {
				if (player.altFunctionUse == 2) {
					int dust = Dust.NewDust(new Vector2(hitbox.X, hitbox.Y), hitbox.Width, hitbox.Height, 169, 0f, 0f, 100, default(Color), 2f);
					Main.dust[dust].noGravity = true;
					Main.dust[dust].velocity.X += player.direction * 2f;
					Main.dust[dust].velocity.Y += 0.2f;
				}
				else {
					int dust = Dust.NewDust(new Vector2(hitbox.X, hitbox.Y), hitbox.Width, hitbox.Height, DustID.Fire, player.velocity.X * 0.2f + (float)(player.direction * 3), player.velocity.Y * 0.2f, 100, default(Color), 2.5f);
					Main.dust[dust].noGravity = true;
				}
			}
		}*/

		public override bool Shoot(Player player, ref Vector2 position, ref float speedX, ref float speedY, ref int type, ref int damage, ref float knockBack) {
			if (player.altFunctionUse == 2)
			{
				Projectile.NewProjectile(position.X, position.Y, speedX, speedY, mod.ProjectileType("InvisBuff3"), damage, knockBack, player.whoAmI);
				player.AddBuff(2, 60);
				player.AddBuff(115, 120);
				player.AddBuff(48, 60);

				

			}
			

			player.AddBuff(2, 60);
			player.AddBuff(115, 120);
			player.AddBuff(48, 30);

			return true;
		}
	}
}